<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.10.2 on win32)" generated="20220421 18:58:35.180" rpa="false" schemaversion="2">
<suite id="s1" name="TestsAPI" source="C:\Users\Tiago Gomes\OneDrive\Documentos\Automação de Testes\RobotFramework\API_Expert\buger-eats-partner-ms\TestsAPI">
<suite id="s1-s1" name="Tests" source="C:\Users\Tiago Gomes\OneDrive\Documentos\Automação de Testes\RobotFramework\API_Expert\buger-eats-partner-ms\TestsAPI\Tests">
<suite id="s1-s1-s1" name="Post" source="C:\Users\Tiago Gomes\OneDrive\Documentos\Automação de Testes\RobotFramework\API_Expert\buger-eats-partner-ms\TestsAPI\Tests\post.robot">
<test id="s1-s1-s1-t1" name="Should create a new partner">
<kw name="Factory New Partner" library="partner">
<var>${Partner}</var>
<msg timestamp="20220421 18:58:35.586" level="INFO">${Partner} = {'name': 'Pizzas Papito', 'email': 'contato@papito.com.br', 'whatsapp': '11999999999', 'business': 'Restaurante'}</msg>
<status status="PASS" starttime="20220421 18:58:35.586" endtime="20220421 18:58:35.586"/>
</kw>
<kw name="Remove Partner By Name" library="database">
<arg>${Partner}[name]</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Filter}</var>
<arg>name=${Partner_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220421 18:58:35.588" level="INFO">${Filter} = {'name': 'Pizzas Papito'}</msg>
<status status="PASS" starttime="20220421 18:58:35.587" endtime="20220421 18:58:35.588"/>
</kw>
<kw name="Delete One" library="RobotMongoDBLibrary.Delete">
<arg>${MONGO_URI}</arg>
<arg>${Filter}</arg>
<status status="PASS" starttime="20220421 18:58:35.588" endtime="20220421 18:58:36.035"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Filter}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220421 18:58:36.035" level="INFO">${Filter} = {'name': 'Pizzas Papito'}</msg>
<status status="PASS" starttime="20220421 18:58:36.035" endtime="20220421 18:58:36.035"/>
</kw>
<status status="PASS" starttime="20220421 18:58:35.587" endtime="20220421 18:58:36.035"/>
</kw>
<kw name="POST Partner" library="services">
<var>${response}</var>
<arg>${Partner}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220421 18:58:36.036" level="INFO">Creating Session using : alias=CreatePartner, url=http://localhost:3333/partners, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220421 18:58:36.036" endtime="20220421 18:58:36.036"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<arg>json=${payload}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220421 18:58:36.079" level="INFO">POST Request : url=http://localhost:3333/partners 
 path_url=/partners 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'auth_user': 'qa', 'auth_password': 'ninja', 'Content-Length': '113'} 
 body=b'{"name": "Pizzas Papito", "email": "contato@papito.com.br", "whatsapp": "11999999999", "business": "Restaurante"}' 
 </msg>
<msg timestamp="20220421 18:58:36.079" level="INFO">POST Response : url=http://localhost:3333/partners 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'Authorization,auth_user,auth_password', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'ETag': 'W/"29-N6ZbVt7dJbQJnQlJsSasiPiWFNE"', 'Date': 'Thu, 21 Apr 2022 21:58:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"partner_id":"6261d38c46d5e890a41448a4"} 
 </msg>
<msg timestamp="20220421 18:58:36.079" level="INFO">${Response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220421 18:58:36.036" endtime="20220421 18:58:36.079"/>
</kw>
<msg timestamp="20220421 18:58:36.079" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220421 18:58:36.036" endtime="20220421 18:58:36.079"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>201</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220421 18:58:36.080" endtime="20220421 18:58:36.080"/>
</kw>
<kw name="Find Partner By Name" library="database">
<var>${Result}</var>
<arg>${Partner}[name]</arg>
<kw name="Find" library="RobotMongoDBLibrary.Find">
<var>${Result}</var>
<arg>${MONGO_URI}</arg>
<arg>${Filter}</arg>
<msg timestamp="20220421 18:58:36.465" level="INFO">${Result} = [{'_id': '6261d38c46d5e890a41448a4', 'name': 'Pizzas Papito', 'email': 'contato@papito.com.br', 'whatsapp': '11999999999', 'business': 'Restaurante', 'active': False, 'created_at': datetime.datetime(2...</msg>
<status status="PASS" starttime="20220421 18:58:36.081" endtime="20220421 18:58:36.465"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Result}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220421 18:58:36.466" level="INFO">${Result} = [{'_id': '6261d38c46d5e890a41448a4', 'name': 'Pizzas Papito', 'email': 'contato@papito.com.br', 'whatsapp': '11999999999', 'business': 'Restaurante', 'active': False, 'created_at': datetime.datetime(2...</msg>
<status status="PASS" starttime="20220421 18:58:36.465" endtime="20220421 18:58:36.466"/>
</kw>
<msg timestamp="20220421 18:58:36.466" level="INFO">${Result} = {'_id': '6261d38c46d5e890a41448a4', 'name': 'Pizzas Papito', 'email': 'contato@papito.com.br', 'whatsapp': '11999999999', 'business': 'Restaurante', 'active': False, 'created_at': datetime.datetime(20...</msg>
<status status="PASS" starttime="20220421 18:58:36.081" endtime="20220421 18:58:36.466"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Response.json()}[partner_id]</arg>
<arg>${Result}[_id]</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220421 18:58:36.467" endtime="20220421 18:58:36.468"/>
</kw>
<tag>happy_way</tag>
<status status="PASS" starttime="20220421 18:58:35.584" endtime="20220421 18:58:36.468"/>
</test>
<test id="s1-s1-s1-t2" name="Should return duplicate company name">
<kw name="Factory Dup Name" library="partner">
<var>${Partner}</var>
<msg timestamp="20220421 18:58:36.473" level="INFO">${Partner} = {'name': 'Tiago Lanchonete', 'email': 'contato@Lanchonete.com.br', 'whatsapp': '31999999999', 'business': 'Conveniência'}</msg>
<status status="PASS" starttime="20220421 18:58:36.472" endtime="20220421 18:58:36.473"/>
</kw>
<kw name="Remove Partner By Name" library="database">
<arg>${Partner}[name]</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Filter}</var>
<arg>name=${Partner_name}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220421 18:58:36.475" level="INFO">${Filter} = {'name': 'Tiago Lanchonete'}</msg>
<status status="PASS" starttime="20220421 18:58:36.474" endtime="20220421 18:58:36.475"/>
</kw>
<kw name="Delete One" library="RobotMongoDBLibrary.Delete">
<arg>${MONGO_URI}</arg>
<arg>${Filter}</arg>
<status status="PASS" starttime="20220421 18:58:36.475" endtime="20220421 18:58:36.861"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${Filter}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20220421 18:58:36.862" level="INFO">${Filter} = {'name': 'Tiago Lanchonete'}</msg>
<status status="PASS" starttime="20220421 18:58:36.862" endtime="20220421 18:58:36.862"/>
</kw>
<status status="PASS" starttime="20220421 18:58:36.473" endtime="20220421 18:58:36.862"/>
</kw>
<kw name="POST Partner" library="services">
<arg>${Partner}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220421 18:58:36.863" level="INFO">Creating Session using : alias=CreatePartner, url=http://localhost:3333/partners, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220421 18:58:36.863" endtime="20220421 18:58:36.863"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<arg>json=${payload}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220421 18:58:36.905" level="INFO">POST Request : url=http://localhost:3333/partners 
 path_url=/partners 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'auth_user': 'qa', 'auth_password': 'ninja', 'Content-Length': '126'} 
 body=b'{"name": "Tiago Lanchonete", "email": "contato@Lanchonete.com.br", "whatsapp": "31999999999", "business": "Conveni\\u00eancia"}' 
 </msg>
<msg timestamp="20220421 18:58:36.905" level="INFO">POST Response : url=http://localhost:3333/partners 
 status=201, reason=Created 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'Authorization,auth_user,auth_password', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '41', 'ETag': 'W/"29-7yfXKz5YgSVsQD2r2YzLqzPAqXE"', 'Date': 'Thu, 21 Apr 2022 21:58:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"partner_id":"6261d38c46d5e890a41448a6"} 
 </msg>
<msg timestamp="20220421 18:58:36.905" level="INFO">${Response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20220421 18:58:36.863" endtime="20220421 18:58:36.905"/>
</kw>
<status status="PASS" starttime="20220421 18:58:36.863" endtime="20220421 18:58:36.905"/>
</kw>
<kw name="POST Partner" library="services">
<var>${Response}</var>
<arg>${Partner}</arg>
<kw name="Create Session" library="RequestsLibrary">
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220421 18:58:36.906" level="INFO">Creating Session using : alias=CreatePartner, url=http://localhost:3333/partners, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220421 18:58:36.906" endtime="20220421 18:58:36.907"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${Response}</var>
<arg>CreatePartner</arg>
<arg>${BASE_URL}</arg>
<arg>json=${payload}</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220421 18:58:36.943" level="INFO">POST Request : url=http://localhost:3333/partners 
 path_url=/partners 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'auth_user': 'qa', 'auth_password': 'ninja', 'Content-Length': '126'} 
 body=b'{"name": "Tiago Lanchonete", "email": "contato@Lanchonete.com.br", "whatsapp": "31999999999", "business": "Conveni\\u00eancia"}' 
 </msg>
<msg timestamp="20220421 18:58:36.943" level="INFO">POST Response : url=http://localhost:3333/partners 
 status=409, reason=Conflict 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Access-Control-Expose-Headers': 'Authorization,auth_user,auth_password', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '36', 'ETag': 'W/"24-npRjBxR/ioA1Ds6xvIHfcGoYoY4"', 'Date': 'Thu, 21 Apr 2022 21:58:36 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Duplicate company name"} 
 </msg>
<msg timestamp="20220421 18:58:36.943" level="INFO">${Response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20220421 18:58:36.907" endtime="20220421 18:58:36.943"/>
</kw>
<msg timestamp="20220421 18:58:36.943" level="INFO">${Response} = &lt;Response [409]&gt;</msg>
<status status="PASS" starttime="20220421 18:58:36.906" endtime="20220421 18:58:36.943"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>409</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220421 18:58:36.944" endtime="20220421 18:58:36.944"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${Response.json()}[message]</arg>
<arg>Duplicate company name</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220421 18:58:36.945" endtime="20220421 18:58:36.945"/>
</kw>
<tag>sad_way</tag>
<status status="PASS" starttime="20220421 18:58:36.469" endtime="20220421 18:58:36.945"/>
</test>
<doc>POST /partners</doc>
<status status="PASS" starttime="20220421 18:58:35.206" endtime="20220421 18:58:36.947"/>
</suite>
<status status="PASS" starttime="20220421 18:58:35.203" endtime="20220421 18:58:36.950"/>
</suite>
<status status="PASS" starttime="20220421 18:58:35.181" endtime="20220421 18:58:36.952"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">happy_way</stat>
<stat pass="1" fail="0" skip="0">sad_way</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="TestsAPI">TestsAPI</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Tests">TestsAPI.Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Post">TestsAPI.Tests.Post</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
